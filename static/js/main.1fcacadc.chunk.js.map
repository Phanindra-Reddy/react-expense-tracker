{"version":3,"sources":["context/ContextReducer.js","context/Context.js","constants/category.js","useTransactions.js","components/IncomeExpenseComp/styles.js","components/IncomeExpenseComp/IncomeExpenseDetails.jsx","components/MainComp/styles.js","components/MainComp/Form/styles.js","components/MainComp/Form/FormatDate.js","Snackbar/styles.js","Snackbar/Snackbar.jsx","components/MainComp/Form/Form.jsx","components/MainComp/Expense List/styles.js","components/MainComp/Expense List/List.jsx","components/MainComp/MainDetails.jsx","styles.js","App.js","index.js"],"names":["contextReducer","state","action","transactions","type","filter","t","id","payload","localStorage","setItem","JSON","stringify","initialState","parse","getItem","ExpenseTrackerContext","createContext","Provider","children","useReducer","dispatch","balance","reduce","acc","currVal","amount","value","deleteTransaction","addTransaction","transaction","incomeColors","expenseColors","incomeCategories","color","expenseCategories","useTransactions","title","forEach","c","transPerType","useContext","total","curVal","categories","category","find","filterCategories","chartData","datasets","data","map","backgroundColor","labels","makeStyles","income","borderBottom","expense","IncomeExpenseDetails","classes","useStyles","Card","className","CardHeader","CardContent","Typography","variant","theme","media","height","paddingTop","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","cartContent","divider","margin","radioGroup","display","justifyContent","marginBottom","button","marginTop","FormatDate","date","d","Date","month","getMonth","day","getDate","year","getFullYear","length","join","root","width","spacing","CustomizedSnackbar","open","setOpen","handleClose","event","reason","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","severity","elevation","formatDate","Form","useState","formData","setFormData","segment","useSpeechContext","createTransaction","Number","isNaN","includes","uuidv4","useEffect","intent","isFinal","entities","e","charAt","slice","toLowerCase","ic","selectedCategories","Grid","container","item","xs","align","gutterBottom","words","w","FormControl","fullWidth","InputLabel","Select","onChange","target","MenuItem","TextField","label","Button","onClick","avatarIncome","green","avatarExpense","palette","getContrastText","red","list","maxHeight","overflow","List","dense","Slide","direction","in","mountOnEnter","unmountOnExit","ListItem","ListItemAvatar","Avatar","MoneyOff","ListItemText","primary","secondary","ListItemSecondaryAction","IconButton","edge","aria-label","Delete","MainDetails","subheader","Divider","desktop","breakpoints","up","mobile","down","main","paddingBottom","last","grid","App","speechState","useRef","SpeechState","Recording","current","scrollIntoView","alignItems","justify","style","sm","ref","ReactDOM","render","appId","language","document","getElementById"],"mappings":"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","file":"static/js/main.1fcacadc.chunk.js","sourcesContent":["\r\nconst contextReducer = (state, action) => {\r\n    let transactions;\r\n\r\n    switch(action.type){\r\n        \r\n        case 'DELETE_TRANSACTION':\r\n           transactions = state.filter((t)=>t.id !== action.payload);\r\n           localStorage.setItem('transactions', JSON.stringify(transactions));\r\n           return transactions;\r\n\r\n        case 'ADD_TRANSACTION':\r\n            transactions = [action.payload, ...state];\r\n            localStorage.setItem('transactions', JSON.stringify(transactions));\r\n            return transactions;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport default contextReducer;","import  React,{useReducer, createContext} from 'react';\r\n\r\nimport contextReducer from './ContextReducer';\r\n\r\nconst initialState = JSON.parse(localStorage.getItem('transactions')) || [];\r\n\r\nexport const ExpenseTrackerContext = createContext(initialState);\r\n\r\nexport const Provider = ({children}) => {\r\n    const [transactions, dispatch] = useReducer(contextReducer, initialState)\r\n\r\n    const deleteTransaction = (id) => {\r\n        dispatch({type:'DELETE_TRANSACTION', payload: id});\r\n    }\r\n\r\n    const addTransaction = (transaction) => {\r\n        dispatch({type:'ADD_TRANSACTION', payload: transaction});\r\n    }\r\n\r\n    const balance = transactions.reduce((acc,currVal)=>{\r\n        return (currVal.type === 'Expense' ? acc-currVal.amount : acc+currVal.amount)\r\n    }, 0);\r\n\r\n    return(\r\n        <ExpenseTrackerContext.Provider \r\n            value={{\r\n                deleteTransaction, \r\n                addTransaction,\r\n                transactions,\r\n                balance\r\n            }}\r\n        >\r\n            {children}\r\n        </ExpenseTrackerContext.Provider>\r\n    )\r\n}","const incomeColors = ['#123123', '#154731', '#165f40', '#16784f', '#14915f', '#10ac6e', '#0bc77e', '#04e38d', '#00ff9d'];\r\nconst expenseColors = ['#b50d12', '#bf2f1f', '#c9452c', '#d3583a', '#dc6a48', '#e57c58', '#ee8d68', '#f79d79', '#ffae8a', '#cc474b', '#f55b5f'];\r\n\r\nexport const incomeCategories = [\r\n  { type: 'Business', amount: 0, color: incomeColors[0] },\r\n  { type: 'Investments', amount: 0, color: incomeColors[1] },\r\n  { type: 'Extra income', amount: 0, color: incomeColors[2] },\r\n  { type: 'Deposits', amount: 0, color: incomeColors[3] },\r\n  { type: 'Lottery', amount: 0, color: incomeColors[4] },\r\n  { type: 'Gifts', amount: 0, color: incomeColors[5] },\r\n  { type: 'Salary', amount: 0, color: incomeColors[6] },\r\n  { type: 'Savings', amount: 0, color: incomeColors[7] },\r\n  { type: 'Rental income', amount: 0, color: incomeColors[8] },\r\n];\r\n\r\nexport const expenseCategories = [\r\n  { type: 'Bills', amount: 0, color: expenseColors[0] },\r\n  { type: 'Car', amount: 0, color: expenseColors[1] },\r\n  { type: 'Clothes', amount: 0, color: expenseColors[2] },\r\n  { type: 'Travel', amount: 0, color: expenseColors[3] },\r\n  { type: 'Food', amount: 0, color: expenseColors[4] },\r\n  { type: 'Shopping', amount: 0, color: expenseColors[5] },\r\n  { type: 'House', amount: 0, color: expenseColors[6] },\r\n  { type: 'Entertainment', amount: 0, color: expenseColors[7] },\r\n  { type: 'Phone', amount: 0, color: expenseColors[8] },\r\n  { type: 'Pets', amount: 0, color: expenseColors[9] },\r\n  { type: 'Other', amount: 0, color: expenseColors[10] },\r\n];\r\n\r\nexport const resetCategories = () => {\r\n  incomeCategories.forEach((c) => c.amount = 0);\r\n  expenseCategories.forEach((c) => c.amount = 0);\r\n};","import {useContext} from 'react';\r\nimport {ExpenseTrackerContext} from './context/Context';\r\nimport {incomeCategories, expenseCategories, resetCategories} from './constants/category'\r\n\r\nconst useTransactions = (title) =>{\r\n    resetCategories();\r\n    const {transactions} = useContext(ExpenseTrackerContext);\r\n    const transPerType = transactions.filter((t)=>t.type === title);\r\n    const total = transPerType.reduce((acc,curVal)=> acc += curVal.amount, 0);\r\n    const categories = title === 'Income' ? incomeCategories : expenseCategories;\r\n\r\n    transPerType.forEach((t)=>{\r\n        const category = categories.find((c)=>c.type === t.category);\r\n\r\n        if(category){\r\n            category.amount += t.amount;\r\n        }\r\n    })\r\n\r\n    const filterCategories = categories.filter((c)=>c.amount> 0);\r\n\r\n    const chartData = {\r\n        datasets :[{\r\n            data: filterCategories.map((c)=>c.amount),\r\n            backgroundColor: filterCategories.map((c)=>c.color)\r\n        }],\r\n        labels: filterCategories.map((c)=>c.type)\r\n    }\r\n\r\n    return {filterCategories, total, chartData};\r\n}\r\nexport default useTransactions;","import {makeStyles} from '@material-ui/core/styles';\r\n\r\nexport default makeStyles(()=>({\r\n    income:{\r\n        borderBottom:'10px solid rgba(0, 255, 0, 0.5)',\r\n    },\r\n    expense:{\r\n        borderBottom:'10px solid rgba(255, 0, 0, 0.5)',\r\n    },\r\n\r\n}));","import React from 'react';\r\nimport {Card, CardHeader, CardContent, Typography} from '@material-ui/core';\r\nimport {Doughnut} from 'react-chartjs-2';\r\nimport useTransactions from '../../useTransactions';\r\n\r\nimport useStyles from './styles';\r\n\r\nconst IncomeExpenseDetails = ({title}) => {\r\n\r\n    const classes = useStyles();\r\n    const {total,chartData} = useTransactions(title);\r\n\r\n    return (\r\n        <Card className={title === 'Income'?classes.income:classes.expense}>\r\n            <CardHeader title={title}/>\r\n            <CardContent>\r\n                <Typography variant=\"h5\">₹{total}</Typography>\r\n                <Doughnut data={chartData}/>\r\n            </CardContent>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default IncomeExpenseDetails\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default makeStyles((theme) => ({\r\n  media: {\r\n    height: 0,\r\n    paddingTop: '56.25%', // 16:9\r\n  },\r\n  expand: {\r\n    transform: 'rotate(0deg)',\r\n    marginLeft: 'auto',\r\n    transition: theme.transitions.create('transform', {\r\n      duration: theme.transitions.duration.shortest,\r\n    }),\r\n  },\r\n  expandOpen: {\r\n    transform: 'rotate(180deg)',\r\n  },\r\n  cartContent: {\r\n    paddingTop: 0,\r\n  },\r\n  divider: {\r\n    margin: '20px 0',\r\n  },\r\n}));","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default makeStyles(() => ({\r\n  radioGroup: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    marginBottom: '-10px',\r\n  },\r\n  button: {\r\n    marginTop: '20px',\r\n  },\r\n}));","const FormatDate = (date) => {\r\n    const d = new Date(date);\r\n    let  month = `${d.getMonth()+1}`;\r\n    let day = `${d.getDate()}`;\r\n    const year = `${d.getFullYear()}`;\r\n\r\n    if(month.length < 2){\r\n        month = `0${month}`;\r\n    }\r\n    if(day.length < 2){\r\n        day = `0${day}`;\r\n    }\r\n    return [day, month, year].join('-');\r\n   \r\n\r\n}\r\nexport default FormatDate;","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    '& > * + *': {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  },\r\n}));","import React from 'react'\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\n\r\nimport useStyles from './styles';\r\n\r\n\r\nconst CustomizedSnackbar = ({open, setOpen}) => {\r\n    const classes = useStyles();\r\n\r\n    const handleClose = (event,reason) =>{\r\n        if(reason === 'clickaway') return;\r\n        setOpen(false);\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Snackbar\r\n                open={open}\r\n                anchorOrigin={{vertical:'top', horizontal:'right'}}\r\n                autoHideDuration={2000}\r\n                onClose={handleClose}\r\n            >\r\n                <MuiAlert onClose={handleClose} severity='success' elevation={0} variant='filled'>\r\n                    Transaction Successfully Created. \r\n                </MuiAlert>\r\n            </Snackbar>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CustomizedSnackbar\r\n\r\n","import React,{useState, useEffect, useContext} from 'react'\r\nimport {TextField, Typography, Grid, Button, FormControl, InputLabel, Select, MenuItem} from '@material-ui/core'\r\nimport {ExpenseTrackerContext} from '../../../context/Context';\r\nimport {v4 as uuidv4} from 'uuid';\r\nimport {useSpeechContext} from '@speechly/react-client'; \r\nimport useStyles from './styles';\r\nimport {incomeCategories, expenseCategories} from '../../../constants/category'\r\nimport formatDate from './FormatDate';\r\nimport CustomizedSnackbar from '../../../Snackbar/Snackbar';\r\n\r\nconst initialState = {\r\n    amount:'',\r\n    category:'',\r\n    type:'',\r\n    date: formatDate(new Date())\r\n};\r\n\r\nconst Form = () => {\r\n    const classes = useStyles();\r\n    const [formData, setFormData] = useState(initialState);\r\n    const {addTransaction} = useContext(ExpenseTrackerContext);\r\n    const {segment} = useSpeechContext();\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const createTransaction = () =>{\r\n        if(Number.isNaN(Number(formData.amount)) || !formData.date.includes('-')) return;\r\n        const transaction ={...formData, amount: Number(formData.amount), id: uuidv4() };\r\n        setOpen(true);\r\n        addTransaction(transaction)\r\n        setFormData(initialState)\r\n    }\r\n\r\n    useEffect(()=>{\r\n        if(segment){\r\n            if(segment.intent.intent === 'add_expense'){\r\n                setFormData({...formData, type:\"Expense\"})\r\n            }else if(segment.intent.intent === 'add_income'){\r\n                setFormData({...formData, type:\"Income\"})\r\n            }else if(segment.isFinal && segment.intent.intent === 'create_transaction'){\r\n                return createTransaction();\r\n            }else if(segment.isFinal && segment.intent.intent === 'cancel_transaction'){\r\n                return setFormData(initialState);\r\n            }\r\n\r\n            segment.entities.forEach((e)=>{\r\n                const category = `${e.value.charAt(0)}${e.value.slice(1).toLowerCase()}`\r\n                switch(e.type){\r\n                    case 'amount':\r\n                        setFormData({...formData, amount:e.value});\r\n                        break;\r\n                    case 'category':\r\n                        if(incomeCategories.map((ic)=>ic.type).includes(category)){\r\n                            setFormData({...formData, type:'Income', category});\r\n                        }else  if(incomeCategories.map((ic)=>ic.type).includes(category)){\r\n                            setFormData({...formData, type:'Expense', category});\r\n                        }\r\n                        break;\r\n                    case 'date':\r\n                        setFormData({...formData, date:e.value});\r\n                        break;\r\n                    default:\r\n                        break;\r\n\r\n                }\r\n            })\r\n\r\n            if(segment.isFinal && formData.type && formData.category && formData.amount && formData.date){\r\n                createTransaction();\r\n            }\r\n        }\r\n    },[segment])\r\n\r\n    const selectedCategories = formData.type === 'Income' ? incomeCategories : expenseCategories;\r\n\r\n    return (\r\n        <Grid container spacing={2}>\r\n            <CustomizedSnackbar open={open} setOpen={setOpen}/>\r\n            <Grid item xs={12}>\r\n                <Typography align=\"center\" variant=\"subtitle2\" gutterBottom>\r\n                    {segment && segment.words.map((w)=> w.value).join(\" \")}\r\n                </Typography>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n                <FormControl fullWidth>\r\n                    <InputLabel>Type</InputLabel>\r\n                    <Select value={formData.type} onChange={(e)=>setFormData({...formData, type:e.target.value})}>\r\n                        <MenuItem value=\"Income\">income</MenuItem>\r\n                        <MenuItem value=\"Expense\">Expense</MenuItem>\r\n                    </Select>\r\n                </FormControl>\r\n            </Grid>\r\n            <Grid item xs={6}> \r\n                <FormControl fullWidth>\r\n                    <InputLabel>Category</InputLabel>\r\n                    <Select value={formData.category} onChange={(e)=>setFormData({...formData, category:e.target.value})}>\r\n                        {selectedCategories.map((c) => <MenuItem key={c.type} value={c.type}>{c.type}</MenuItem>)}\r\n                    </Select>\r\n                </FormControl>\r\n            </Grid>\r\n            <Grid item xs={6} value={formData.amount} onChange={(e)=>setFormData({...formData, amount:e.target.value})}>\r\n                <TextField type=\"number\" label=\"Amount\" fullWidth/>\r\n            </Grid>\r\n            <Grid item xs={6} value={formData.date} onChange={(e)=>setFormData({...formData, date:formatDate(e.target.value)})}>\r\n                <TextField type=\"date\" label=\"Date\" fullWidth/>\r\n            </Grid>\r\n            <Button className={classes.button} variant=\"outlined\" color=\"primary\" fullWidth onClick={createTransaction}>Create</Button>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default Form;\r\n","import { makeStyles } from '@material-ui/core/styles';\r\nimport { red, green } from '@material-ui/core/colors';\r\n\r\nexport default makeStyles((theme) => ({\r\n  avatarIncome: {\r\n    color: '#fff',\r\n    backgroundColor: green[500],\r\n  },\r\n  avatarExpense: {\r\n    color: theme.palette.getContrastText(red[500]),\r\n    backgroundColor: red[500],\r\n  },\r\n  list: {\r\n    maxHeight: '150px',\r\n    overflow: 'auto',\r\n  },\r\n}));","import React,{useContext} from 'react'\r\nimport {List as MUList, ListItem, ListItemAvatar, ListItemText, Avatar, ListItemSecondaryAction, IconButton, Slide} from '@material-ui/core';\r\nimport {Delete, MoneyOff} from '@material-ui/icons';\r\n\r\nimport {ExpenseTrackerContext} from '../../../context/Context';\r\nimport useStyles from './styles';\r\n\r\n\r\nconst List = () => {\r\n    const classes = useStyles();\r\n    const {deleteTransaction, transactions} = useContext(ExpenseTrackerContext);\r\n\r\n    return (\r\n        <MUList dense={false} className={classes.list}>\r\n            {transactions.map((transaction)=>(\r\n                <Slide direction=\"down\" in mountOnEnter unmountOnExit key={transaction.id}>\r\n                    <ListItem>\r\n                        <ListItemAvatar>\r\n                            <Avatar className={transaction.type==='Income'?classes.avatarIncome:classes.avatarExpense}>\r\n                                <MoneyOff />\r\n                            </Avatar>\r\n                        </ListItemAvatar>\r\n                        <ListItemText primary={transaction.category} secondary={`₹${transaction.amount} - ${transaction.date}`}/>\r\n                        <ListItemSecondaryAction>\r\n                            <IconButton edge=\"end\" aria-label=\"delete\" onClick={() => deleteTransaction(transaction.id)}>\r\n                                <Delete />\r\n                            </IconButton>\r\n                        </ListItemSecondaryAction>\r\n                    </ListItem>\r\n                </Slide>\r\n            ))}\r\n        </MUList>\r\n    )\r\n};\r\n\r\nexport default List\r\n","import React,{useContext} from 'react';\r\nimport {Card, CardHeader, CardContent, Typography, Grid, Divider} from '@material-ui/core';\r\nimport useStyles from './styles';\r\nimport Form from './Form/Form';\r\nimport List from './Expense List/List';\r\n\r\nimport {ExpenseTrackerContext} from '../../context/Context';\r\n//import InfoCard from '../InfoCard';\r\n\r\nconst MainDetails = () => {\r\n    const classes = useStyles();\r\n    const {balance} = useContext(ExpenseTrackerContext);\r\n\r\n    return (\r\n        <Card className={classes.root}>\r\n            <CardHeader title=\"Expense Tracker\" subheader=\"Powered by Phanindra\"/>\r\n            <CardContent>\r\n                <Typography align=\"center\" variant=\"h5\">Total Balance ₹{balance}</Typography>\r\n                {/* <Typography variant=\"subtitle2\" style={{lineHeight:'1.5em', marginTop:'20px'}}>\r\n                    <InfoCard/>\r\n                </Typography> */}\r\n                <Divider className={classes.divider}/>\r\n                <Form/>\r\n            </CardContent>\r\n            <CardContent classes={classes.CardContent}>\r\n                <Grid item xs={12}>\r\n                    <List/>\r\n                </Grid>\r\n            </CardContent>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default MainDetails\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default makeStyles((theme) => ({\r\n  desktop: {\r\n    [theme.breakpoints.up('sm')]: {\r\n      display: 'none',\r\n    },\r\n  },\r\n  mobile: {\r\n    [theme.breakpoints.down('sm')]: {\r\n      display: 'none',\r\n    },\r\n  },\r\n  main: {\r\n    [theme.breakpoints.up('sm')]: {\r\n      paddingBottom: '5%',\r\n    },\r\n  },\r\n  last: {\r\n    [theme.breakpoints.down('sm')]: {\r\n      marginBottom: theme.spacing(3),\r\n      paddingBottom: '200px',\r\n    },\r\n  },\r\n  grid: {\r\n    '& > *': {\r\n      margin: theme.spacing(2),\r\n    },\r\n  },\r\n}));\r\n\r\n","import React,{useEffect,useRef} from 'react';\nimport {Grid} from '@material-ui/core';\n//import {PushToTalkButton, PushToTalkButtonContainer, ErrorPanel} from '@speechly/react-ui';\nimport {SpeechState, useSpeechContext} from '@speechly/react-client'\nimport IncomeExpenseDetails from './components/IncomeExpenseComp/IncomeExpenseDetails';\nimport MainDetails from './components/MainComp/MainDetails';\nimport useStyles from './styles';\n\n\nfunction App() {\n  const classes = useStyles();\n  const {speechState} = useSpeechContext();\n  const main = useRef(null);\n\n  const executeScroll = () => main.current.scrollIntoView();\n\n  useEffect(()=>{\n    if(speechState === SpeechState.Recording){\n      executeScroll();\n    }\n  },[speechState])\n\n  return (\n    <div className=\"App\">\n      <Grid className={classes.grid} container spacing={0} alignItems=\"center\" justify=\"ceneter\" style={{height:'100vh'}}>\n        <Grid item xs={12} sm={4} className={classes.mobile}>\n          <IncomeExpenseDetails title=\"Income\"/>\n        </Grid>\n        <Grid ref={main} item xs={12} sm={3} className={classes.main}>\n            <MainDetails/>\n        </Grid>\n        <Grid item xs={12} sm={4} className={classes.desktop}>\n          <IncomeExpenseDetails title=\"Income\"/>\n        </Grid>\n        <Grid item xs={12} sm={4} className={classes.last}>\n          <IncomeExpenseDetails title=\"Expense\"/>\n        </Grid>\n      </Grid>\n\n      {/* <PushToTalkButtonContainer>\n        <PushToTalkButton/>\n        <ErrorPanel/>\n      </PushToTalkButtonContainer> */}\n\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {Provider} from './context/Context';\nimport {SpeechProvider} from '@speechly/react-client';\n\nReactDOM.render(\n  <SpeechProvider appId=\"f56d3d57-27ab-4a1a-b5e1-ad75f7bb38e8\" language=\"en-US\">\n    <Provider>\n      <App />\n    </Provider>\n  </SpeechProvider>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}