[{"E:\\React.js World\\React Projects\\react-expense-tracker\\src\\index.js":"1","E:\\React.js World\\React Projects\\react-expense-tracker\\src\\reportWebVitals.js":"2","E:\\React.js World\\React Projects\\react-expense-tracker\\src\\App.js":"3","E:\\React.js World\\React Projects\\react-expense-tracker\\src\\components\\IncomeExpenseComp\\IncomeExpenseDetails.jsx":"4","E:\\React.js World\\React Projects\\react-expense-tracker\\src\\components\\IncomeExpenseComp\\styles.js":"5","E:\\React.js World\\React Projects\\react-expense-tracker\\src\\styles.js":"6","E:\\React.js World\\React Projects\\react-expense-tracker\\src\\components\\MainComp\\MainDetails.jsx":"7","E:\\React.js World\\React Projects\\react-expense-tracker\\src\\components\\MainComp\\styles.js":"8","E:\\React.js World\\React Projects\\react-expense-tracker\\src\\components\\MainComp\\Form\\Form.jsx":"9","E:\\React.js World\\React Projects\\react-expense-tracker\\src\\components\\MainComp\\Form\\styles.js":"10","E:\\React.js World\\React Projects\\react-expense-tracker\\src\\components\\MainComp\\Expense List\\List.jsx":"11","E:\\React.js World\\React Projects\\react-expense-tracker\\src\\components\\MainComp\\Expense List\\styles.js":"12","E:\\React.js World\\React Projects\\react-expense-tracker\\src\\context\\Context.js":"13","E:\\React.js World\\React Projects\\react-expense-tracker\\src\\context\\ContextReducer.js":"14","E:\\React.js World\\React Projects\\react-expense-tracker\\src\\constants\\category.js":"15","E:\\React.js World\\React Projects\\react-expense-tracker\\src\\components\\MainComp\\Form\\FormatDate.js":"16","E:\\React.js World\\React Projects\\react-expense-tracker\\src\\useTransactions.js":"17","E:\\React.js World\\React Projects\\react-expense-tracker\\src\\Snackbar\\Snackbar.jsx":"18","E:\\React.js World\\React Projects\\react-expense-tracker\\src\\Snackbar\\styles.js":"19","E:\\React.js World\\React Projects\\react-expense-tracker\\src\\components\\InfoCard.jsx":"20"},{"size":410,"mtime":1612165160247,"results":"21","hashOfConfig":"22"},{"size":362,"mtime":1607601617176,"results":"23","hashOfConfig":"24"},{"size":1559,"mtime":1612190204827,"results":"25","hashOfConfig":"22"},{"size":746,"mtime":1612162737328,"results":"26","hashOfConfig":"22"},{"size":255,"mtime":1612090889735,"results":"27","hashOfConfig":"22"},{"size":584,"mtime":1612189852346,"results":"28","hashOfConfig":"22"},{"size":1235,"mtime":1612189442563,"results":"29","hashOfConfig":"22"},{"size":512,"mtime":1612191112999,"results":"30","hashOfConfig":"22"},{"size":5000,"mtime":1612183355225,"results":"31","hashOfConfig":"22"},{"size":245,"mtime":1612092649921,"results":"32","hashOfConfig":"22"},{"size":1593,"mtime":1612103104943,"results":"33","hashOfConfig":"22"},{"size":414,"mtime":1612094057006,"results":"34","hashOfConfig":"22"},{"size":1080,"mtime":1612190862769,"results":"35","hashOfConfig":"22"},{"size":619,"mtime":1612180929357,"results":"36","hashOfConfig":"22"},{"size":1691,"mtime":1612103432087,"results":"37","hashOfConfig":"22"},{"size":377,"mtime":1612110780922,"results":"38","hashOfConfig":"22"},{"size":1131,"mtime":1612162790660,"results":"39","hashOfConfig":"22"},{"size":936,"mtime":1612186720051,"results":"40","hashOfConfig":"22"},{"size":204,"mtime":1612182479579,"results":"41","hashOfConfig":"22"},{"size":480,"mtime":1612187627494,"results":"42","hashOfConfig":"22"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},"16flbcx",{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"8ntp7r",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"45"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},"E:\\React.js World\\React Projects\\react-expense-tracker\\src\\index.js",[],["86","87"],"E:\\React.js World\\React Projects\\react-expense-tracker\\src\\reportWebVitals.js",[],["88","89"],"E:\\React.js World\\React Projects\\react-expense-tracker\\src\\App.js",[],"E:\\React.js World\\React Projects\\react-expense-tracker\\src\\components\\IncomeExpenseComp\\IncomeExpenseDetails.jsx",[],"E:\\React.js World\\React Projects\\react-expense-tracker\\src\\components\\IncomeExpenseComp\\styles.js",[],"E:\\React.js World\\React Projects\\react-expense-tracker\\src\\styles.js",[],"E:\\React.js World\\React Projects\\react-expense-tracker\\src\\components\\MainComp\\MainDetails.jsx",[],"E:\\React.js World\\React Projects\\react-expense-tracker\\src\\components\\MainComp\\styles.js",[],"E:\\React.js World\\React Projects\\react-expense-tracker\\src\\components\\MainComp\\Form\\Form.jsx",["90"],"import React,{useState, useEffect, useContext} from 'react'\r\nimport {TextField, Typography, Grid, Button, FormControl, InputLabel, Select, MenuItem} from '@material-ui/core'\r\nimport {ExpenseTrackerContext} from '../../../context/Context';\r\nimport {v4 as uuidv4} from 'uuid';\r\nimport {useSpeechContext} from '@speechly/react-client'; \r\nimport useStyles from './styles';\r\nimport {incomeCategories, expenseCategories} from '../../../constants/category'\r\nimport formatDate from './FormatDate';\r\nimport CustomizedSnackbar from '../../../Snackbar/Snackbar';\r\n\r\nconst initialState = {\r\n    amount:'',\r\n    category:'',\r\n    type:'',\r\n    date: formatDate(new Date())\r\n};\r\n\r\nconst Form = () => {\r\n    const classes = useStyles();\r\n    const [formData, setFormData] = useState(initialState);\r\n    const {addTransaction} = useContext(ExpenseTrackerContext);\r\n    const {segment} = useSpeechContext();\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const createTransaction = () =>{\r\n        if(Number.isNaN(Number(formData.amount)) || !formData.date.includes('-')) return;\r\n        const transaction ={...formData, amount: Number(formData.amount), id: uuidv4() };\r\n        setOpen(true);\r\n        addTransaction(transaction)\r\n        setFormData(initialState)\r\n    }\r\n\r\n    useEffect(()=>{\r\n        if(segment){\r\n            if(segment.intent.intent === 'add_expense'){\r\n                setFormData({...formData, type:\"Expense\"})\r\n            }else if(segment.intent.intent === 'add_income'){\r\n                setFormData({...formData, type:\"Income\"})\r\n            }else if(segment.isFinal && segment.intent.intent === 'create_transaction'){\r\n                return createTransaction();\r\n            }else if(segment.isFinal && segment.intent.intent === 'cancel_transaction'){\r\n                return setFormData(initialState);\r\n            }\r\n\r\n            segment.entities.forEach((e)=>{\r\n                const category = `${e.value.charAt(0)}${e.value.slice(1).toLowerCase()}`\r\n                switch(e.type){\r\n                    case 'amount':\r\n                        setFormData({...formData, amount:e.value});\r\n                        break;\r\n                    case 'category':\r\n                        if(incomeCategories.map((ic)=>ic.type).includes(category)){\r\n                            setFormData({...formData, type:'Income', category});\r\n                        }else  if(incomeCategories.map((ic)=>ic.type).includes(category)){\r\n                            setFormData({...formData, type:'Expense', category});\r\n                        }\r\n                        break;\r\n                    case 'date':\r\n                        setFormData({...formData, date:e.value});\r\n                        break;\r\n                    default:\r\n                        break;\r\n\r\n                }\r\n            })\r\n\r\n            if(segment.isFinal && formData.type && formData.category && formData.amount && formData.date){\r\n                createTransaction();\r\n            }\r\n        }\r\n    },[segment])\r\n\r\n    const selectedCategories = formData.type === 'Income' ? incomeCategories : expenseCategories;\r\n\r\n    return (\r\n        <Grid container spacing={2}>\r\n            <CustomizedSnackbar open={open} setOpen={setOpen}/>\r\n            <Grid item xs={12}>\r\n                <Typography align=\"center\" variant=\"subtitle2\" gutterBottom>\r\n                    {segment && segment.words.map((w)=> w.value).join(\" \")}\r\n                </Typography>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n                <FormControl fullWidth>\r\n                    <InputLabel>Type</InputLabel>\r\n                    <Select value={formData.type} onChange={(e)=>setFormData({...formData, type:e.target.value})}>\r\n                        <MenuItem value=\"Income\">income</MenuItem>\r\n                        <MenuItem value=\"Expense\">Expense</MenuItem>\r\n                    </Select>\r\n                </FormControl>\r\n            </Grid>\r\n            <Grid item xs={6}> \r\n                <FormControl fullWidth>\r\n                    <InputLabel>Category</InputLabel>\r\n                    <Select value={formData.category} onChange={(e)=>setFormData({...formData, category:e.target.value})}>\r\n                        {selectedCategories.map((c) => <MenuItem key={c.type} value={c.type}>{c.type}</MenuItem>)}\r\n                    </Select>\r\n                </FormControl>\r\n            </Grid>\r\n            <Grid item xs={6} value={formData.amount} onChange={(e)=>setFormData({...formData, amount:e.target.value})}>\r\n                <TextField type=\"number\" label=\"Amount\" fullWidth/>\r\n            </Grid>\r\n            <Grid item xs={6} value={formData.date} onChange={(e)=>setFormData({...formData, date:formatDate(e.target.value)})}>\r\n                <TextField type=\"date\" label=\"Date\" fullWidth/>\r\n            </Grid>\r\n            <Button className={classes.button} variant=\"outlined\" color=\"primary\" fullWidth onClick={createTransaction}>Create</Button>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default Form;\r\n","E:\\React.js World\\React Projects\\react-expense-tracker\\src\\components\\MainComp\\Form\\styles.js",[],"E:\\React.js World\\React Projects\\react-expense-tracker\\src\\components\\MainComp\\Expense List\\List.jsx",[],"E:\\React.js World\\React Projects\\react-expense-tracker\\src\\components\\MainComp\\Expense List\\styles.js",[],"E:\\React.js World\\React Projects\\react-expense-tracker\\src\\context\\Context.js",[],"E:\\React.js World\\React Projects\\react-expense-tracker\\src\\context\\ContextReducer.js",[],"E:\\React.js World\\React Projects\\react-expense-tracker\\src\\constants\\category.js",[],"E:\\React.js World\\React Projects\\react-expense-tracker\\src\\components\\MainComp\\Form\\FormatDate.js",[],"E:\\React.js World\\React Projects\\react-expense-tracker\\src\\useTransactions.js",[],"E:\\React.js World\\React Projects\\react-expense-tracker\\src\\Snackbar\\Snackbar.jsx",[],"E:\\React.js World\\React Projects\\react-expense-tracker\\src\\Snackbar\\styles.js",[],"E:\\React.js World\\React Projects\\react-expense-tracker\\src\\components\\InfoCard.jsx",[],{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","replacedBy":"94"},{"ruleId":"91","replacedBy":"95"},{"ruleId":"93","replacedBy":"96"},{"ruleId":"97","severity":1,"message":"98","line":71,"column":7,"nodeType":"99","endLine":71,"endColumn":16,"suggestions":"100"},"no-native-reassign",["101"],"no-negated-in-lhs",["102"],["101"],["102"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'createTransaction' and 'formData'. Either include them or remove the dependency array. You can also do a functional update 'setFormData(f => ...)' if you only need 'formData' in the 'setFormData' call.","ArrayExpression",["103"],"no-global-assign","no-unsafe-negation",{"desc":"104","fix":"105"},"Update the dependencies array to be: [createTransaction, formData, segment]",{"range":"106","text":"107"},[2997,3006],"[createTransaction, formData, segment]"]